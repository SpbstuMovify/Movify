plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version '0.9.4'
    id "jacoco"
}

group = 'com.polytech'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.google.protobuf:protobuf-java-util:3.23.0'
    implementation 'io.grpc:grpc-protobuf:1.58.0'
    implementation 'io.grpc:grpc-stub:1.58.0'
    implementation 'com.google.protobuf:protobuf-java:3.23.0'
    implementation 'io.github.lognet:grpc-spring-boot-starter:5.1.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'commons-io:commons-io:2.18.0'
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    // Openapi
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.24.4'
    }

    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.59.0'
        }
    }
    generateProtoTasks{
        all()*.plugins {grpc {}}
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.12"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/polytech/contentservice/repository/ContentRepository*",
                    "com/polytech/contentservice/entity/QUser*",
                    "com/auth/*",
                    "com/content/*",
                    "com/polytech/contentservice/entity/QEpisode*",
                    "com/polytech/contentservice/config/*",
                    "com/polytech/contentservice/exception/*",
                    "com/polytech/contentservice/entity/QAuthAttempts*",
                    "com/polytech/contentservice/entity/QCastMember*",
                    "com/polytech/contentservice/entity/QContent*",
                    "com/polytech/contentservice/entity/QPersonalList*",
                    "com/polytech/contentservice/dto/castmember/CastMemberDto*"
            ])
        }))
    }
}
check.dependsOn jacocoTestReport