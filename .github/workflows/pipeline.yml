name: CI/CD Pipeline

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Integration Docker images
        working-directory: IntegrationTests/Tests
        run: |
          docker compose -f docker-compose.integration.yml build
          docker compose -f docker-compose.integration.yml push

      - name: Build and push E2E Docker images
        run: |
          docker compose build
          docker compose push

  integration-tests:
    needs: docker-build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.12.4"

      - name: Install Dependencies
        working-directory: IntegrationTests/Tests
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker images
        working-directory: IntegrationTests/Tests
        run: |
          docker compose -f docker-compose.integration.yml pull

      - name: Run Pytest Integration Tests
        working-directory: IntegrationTests/Tests
        run: |
          pytest -s -v

  e2e-tests:
    needs: docker-build  #[docker-build, integration-tests]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker images for e2e
        run: |
          docker compose pull

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.16.0"

      - name: Install E2E dependencies
        working-directory: UI
        run: |
          npm ci

      - name: Start E2E environment
        run: |
          docker compose up -d

      - name: Run Cypress Tests
        working-directory: UI
        run: |
          npm run test:e2e:ci

      - name: Stop E2E environment
        if: always()
        run: |
          docker compose down
